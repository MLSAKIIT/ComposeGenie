version: '3.8'

services:
  {{app_name}}:
    image: {{app_image}}:{{app_tag}}
    container_name: {{app_name}}_app
    ports:
      - "{{app_port}}:{{app_internal_port}}"
    environment:
      - NODE_ENV={{environment}}
      - DATABASE_URL=mongodb://{{db_name}}:{{db_port}}/{{database_name}}
      {{#each additional_env_vars}}
      - {{key}}={{value}}
      {{/each}}
    volumes:
      - ./{{app_name}}:/app
      - /app/node_modules
    depends_on:
      - {{db_service_name}}
    networks:
      - {{network_name}}
    restart: unless-stopped

  {{db_service_name}}:
    image: mongo:{{mongo_version}}
    container_name: {{app_name}}_mongodb
    ports:
      - "{{db_port}}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME={{db_username}}
      - MONGO_INITDB_ROOT_PASSWORD={{db_password}}
      - MONGO_INITDB_DATABASE={{database_name}}
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - {{network_name}}
    restart: unless-stopped

  {{#if include_redis}}
  redis:
    image: redis:{{redis_version}}
    container_name: {{app_name}}_redis
    ports:
      - "{{redis_port}}:6379"
    volumes:
      - redis_data:/data
    networks:
      - {{network_name}}
    restart: unless-stopped
    command: redis-server --appendonly yes
  {{/if}}

  {{#if include_nginx}}
  nginx:
    image: nginx:{{nginx_version}}
    container_name: {{app_name}}_nginx
    ports:
      - "{{nginx_port}}:80"
      {{#if ssl_enabled}}
      - "{{ssl_port}}:443"
      {{/if}}
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      {{#if ssl_enabled}}
      - ./ssl:/etc/nginx/ssl
      {{/if}}
    depends_on:
      - {{app_name}}
    networks:
      - {{network_name}}
    restart: unless-stopped
  {{/if}}

volumes:
  mongodb_data:
    driver: local
  {{#if include_redis}}
  redis_data:
    driver: local
  {{/if}}

networks:
  {{network_name}}:
    driver: bridge