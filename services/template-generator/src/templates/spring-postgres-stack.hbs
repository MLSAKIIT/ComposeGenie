version: '3.8'

services:
  {{app_name}}_app:
    image: {{app_image}}:{{app_tag}}
    container_name: {{app_name}}_application
    ports:
      - "{{app_port}}:{{app_internal_port}}"
    environment:
      - SPRING_PROFILES_ACTIVE={{spring_profile}}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://{{db_service_name}}:5432/{{database_name}}
      - SPRING_DATASOURCE_USERNAME={{db_username}}
      - SPRING_DATASOURCE_PASSWORD={{db_password}}
      - SPRING_JPA_HIBERNATE_DDL_AUTO={{hibernate_ddl_auto}}
      {{#each additional_env_vars}}
      - {{key}}={{value}}
      {{/each}}
    volumes:
      - ./logs:/app/logs
      {{#if include_config_volume}}
      - ./config:/app/config
      {{/if}}
    depends_on:
      - {{db_service_name}}
      {{#if include_redis}}
      - redis
      {{/if}}
    networks:
      - {{network_name}}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:{{app_internal_port}}/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  {{db_service_name}}:
    image: postgres:{{postgres_version}}
    container_name: {{app_name}}_postgres
    ports:
      - "{{db_port}}:5432"
    environment:
      - POSTGRES_DB={{database_name}}
      - POSTGRES_USER={{db_username}}
      - POSTGRES_PASSWORD={{db_password}}
      - POSTGRES_INITDB_ARGS={{postgres_init_args}}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      {{#if include_init_sql}}
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      {{/if}}
    networks:
      - {{network_name}}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{db_username}} -d {{database_name}}"]
      interval: 10s
      timeout: 5s
      retries: 5

  {{#if include_redis}}
  redis:
    image: redis:{{redis_version}}
    container_name: {{app_name}}_redis
    ports:
      - "{{redis_port}}:6379"
    volumes:
      - redis_data:/data
    networks:
      - {{network_name}}
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass {{redis_password}}
  {{/if}}

  {{#if include_pgadmin}}
  pgadmin:
    image: dpage/pgadmin4:{{pgadmin_version}}
    container_name: {{app_name}}_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL={{pgadmin_email}}
      - PGADMIN_DEFAULT_PASSWORD={{pgadmin_password}}
    ports:
      - "{{pgadmin_port}}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - {{db_service_name}}
    networks:
      - {{network_name}}
    restart: unless-stopped
  {{/if}}

volumes:
  postgres_data:
    driver: local
  {{#if include_redis}}
  redis_data:
    driver: local
  {{/if}}
  {{#if include_pgadmin}}
  pgadmin_data:
    driver: local
  {{/if}}

networks:
  {{network_name}}:
    driver: bridge